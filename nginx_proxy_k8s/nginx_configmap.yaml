apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    worker_processes auto;

    events {
        worker_connections 1024;
    }

    http {
        # Rate limiting zones defined at http context level
        limit_req_zone $binary_remote_addr zone=user_limit:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=session_limit:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=recommendation_limit:10m rate=10r/s;

        server {
            listen 80;
            server_name localhost;
            root /usr/share/nginx/html;

            # Global client max body size - allows large file uploads (100MB)
            client_max_body_size 100M;

            # Enable gzip compression
            gzip on;
            gzip_types text/plain application/json;

            # CORS configuration
            add_header 'Access-Control-Allow-Origin' 'http://localhost:4200' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;

            if ($request_method = 'OPTIONS') {
                return 204;
            }

            # User Management Service
            location /api/users/ {
                proxy_pass http://user-management-service:3000/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # Apply rate limiting
                limit_req zone=user_limit burst=20;
            }

            # Training Session Management Service
            location /api/sessions/ {
                proxy_pass http://training-session-service:3001/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # Apply rate limiting
                limit_req zone=session_limit burst=20;
            }

            # Workout Recommendation Service
            location /api/recommendations/ {
                proxy_pass http://workout-recommendation-service:8000/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # Increase maximum allowed request body size to 10MB
                client_max_body_size 10M;

                # Apply rate limiting
                limit_req zone=recommendation_limit burst=20;
            }

            # Health check endpoint
            location /health {
                access_log off;
                default_type application/json;
                return 200 "{\"status\":\"UP\"}";
            }


            # Error handling
            error_page 404 /404.json;
            location = /404.json {
                return 404 '{"status":404,"message":"Not Found"}';
                add_header Content-Type application/json;
            }

            error_page 500 502 503 504 /50x.json;
            location = /50x.json {
                return 500 '{"status":500,"message":"Internal Server Error"}';
                add_header Content-Type application/json;
            }
        }
    }
